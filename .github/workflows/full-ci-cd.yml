name: Full CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  # Job to deploy to the QA environment on successful merge to `main`
  deploy_to_qa:
    uses: NYPL/sfr-bookfinder-front-end/.github/workflows/build-qa.yml@main
    secrets: inherit

  # Job to run e2e tests on the QA environment after deployment
  run_e2e_tests:
    needs: deploy_to_qa
    uses: NYPL/sfr-bookfinder-front-end/.github/workflows/Playwright.yml@main
    with:
      base_url: "https://drb-qa.nypl.org/"
    secrets: inherit

  # Job to deploy to production after successful e2e tests on QA
  deploy_to_production:
    needs: run_e2e_tests
    uses: NYPL/sfr-bookfinder-front-end/.github/workflows/build-production.yaml@main
    secrets: inherit

  # Rollback job in case of failure (Revert production to the previous task definition)
  rollback:
    name: Rollback to Previous Version
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: npm

      - name: Configure AWS credentials from Production account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Pull and tag previous image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: sfr-front-end
        run: |
          docker pull $ECR_REGISTRY/$ECR_REPOSITORY:production-previous
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:production-previous $ECR_REGISTRY/$ECR_REPOSITORY:production-latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:production-latest

      - name: Force ECS Update
        run: |
          aws ecs update-service --cluster sfr-frontend-production-tf --service sfr-frontend-production-tf --force-new-deployment
